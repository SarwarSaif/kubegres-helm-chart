apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: {{ .Values.global.controlPlaneName }}
  name: {{ .Values.global.serviceAccountName }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas.controller }}
  selector:
    matchLabels:
      control-plane: {{ .Values.global.controlPlaneName }}
  template:
    metadata:
      labels:
        control-plane: {{ .Values.global.controlPlaneName }}
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: "{{- .Values.proxy.image.repository -}}:{{- .Values.proxy.image.tag }}"
        name: kube-rbac-proxy
        ports:
        - containerPort: {{ .Values.proxy.ports.containerPort }}
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: "{{- .Values.manager.image.repository -}}:{{- .Values.manager.image.tag }}"
        name: manager
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: {{ toYaml .Values.manager.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ toYaml .Values.manager.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: {{ toYaml .Values.manager.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ toYaml .Values.manager.readinessProbe.periodSeconds }}
        resources:
{{ toYaml .Values.manager.resources | indent 12 }}
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      terminationGracePeriodSeconds: 10
