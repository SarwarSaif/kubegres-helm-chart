apiVersion: kubegres.reactive-tech.io/v1
kind: Kubegres
metadata:
  name: mypostgres
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    # app.kubernetes.io/version: {{ .Chart.AppVersion }}
    # helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # hooks are defined here 
    "helm.sh/hook": post-install 
    "helm.sh/hook-weight": "5" 
    "helm.sh/hook-delete-policy": hook-succeeded 
spec:
   replicas: {{ .Values.replicas.postgresql }}
   image: "{{- .Values.postgresql.image.repository -}}:{{- .Values.postgresql.image.tag }}"
   database:
      size: {{ .Values.postgresql.database.size }}
   customConfig: mypostgres-conf
   env:
      - name: POSTGRES_PASSWORD
        valueFrom:
           secretKeyRef:
              name: mypostgres-secret
              key: superUserPassword
      - name: POSTGRES_REPLICATION_PASSWORD
        valueFrom:
           secretKeyRef:
              name: mypostgres-secret
              key: replicationUserPassword

#    scheduler:
#       affinity: 
#          nodeAffinity:
#            requiredDuringSchedulingIgnoredDuringExecution:
#              nodeSelectorTerms:
#              - matchExpressions:
#                - key: kubernetes.io/hostname
#                  operator: NotIn
#                  values:
#                  - node1
#                  - node2
#          podAntiAffinity:
#             preferredDuringSchedulingIgnoredDuringExecution:
#                - weight: 100
#                  podAffinityTerm:
#                     labelSelector:
#                        matchExpressions:
#                          - key: app
#                            operator: In
#                            values:
#                            - mypostgres
#                     topologyKey: "kubernetes.io/hostname"
   # scheduler:
   #    affinity:
   #       nodeAffinity:
   #       requiredDuringSchedulingIgnoredDuringExecution:
   #         nodeSelectorTerms:
   #         - matchExpressions:
   #           - key: kubernetes.io/hostname
   #             operator: NotIn
   #             values:
   #             - node1
   