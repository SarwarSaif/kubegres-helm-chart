apiVersion: kubegres.reactive-tech.io/v1
kind: Kubegres
metadata:
  name: {{ .Release.Name }}-postgres
#   namespace: {{ .Release.Namespace }}
#   labels:
#    #  app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
#    #  app.kubernetes.io/instance: {{ .Release.Name | quote }}
#     # app.kubernetes.io/version: {{ .Chart.AppVersion }}
#     # helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
#   annotations:
#    #  # hooks are defined here 
#    #  "helm.sh/hook": post-install 
#    #  "helm.sh/hook-weight": "5" 
#    #  "helm.sh/hook-delete-policy": hook-succeeded 
spec:
   replicas: {{ .Values.replicas.postgresql }}
   image: "{{- .Values.postgresql.image.repository -}}:{{- .Values.postgresql.image.tag }}"
   database:
      size: {{ .Values.postgresql.database.size }}
      storageClassName: {{ .Values.postgresql.database.storageClassName }}
      volumeMount: {{ .Values.postgresql.database.volumeMount }}    
   customConfig: {{ .Values.postgresql.customConfiguration.secretName }}
   port: {{ .Values.postgresql.port }}
   scheduler:
      affinity: 
         nodeAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
             - matchExpressions:
               - key: kubernetes.io/hostname
                 operator: NotIn
                 values:
                 - node1
                 - node2
         podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
               - weight: 100
                 podAffinityTerm:
                    labelSelector:
                       matchExpressions:
                         - key: app
                           operator: In
                           values:
                           - mypostgres
                    topologyKey: "kubernetes.io/hostname"
   
   probe:
      livenessProbe:
         exec:
            command:
              - sh
              - -c
              - exec pg_isready -U postgres -h $POD_IP
         failureThreshold: 10
         initialDelaySeconds: 70
         periodSeconds: 20
         successThreshold: 1
         timeoutSeconds: 15

      readinessProbe:
         exec:
            command:
              - sh
              - -c
              - exec pg_isready -U postgres -h $POD_IP
         failureThreshold: 3
         initialDelaySeconds: 20
         periodSeconds: 5
         successThreshold: 1
         timeoutSeconds: 3
   env:
      - name: POSTGRES_PASSWORD
        valueFrom:
           secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: superUserPassword
      - name: POSTGRES_REPLICATION_PASSWORD
        valueFrom:
           secretKeyRef:
               name: {{ .Release.Name }}-secret
               key: replicationUserPassword
      - name: POSTGRES_DATABASE_NAME
        valueFrom:
           secretKeyRef:
               name: {{ .Release.Name }}-secret
               key: databaseName
      - name: POSTGRES_DATABASE_USERNAME
        valueFrom:
           secretKeyRef:
               name: {{ .Release.Name }}-secret
               key: databaseUserName
      - name: POSTGRES_DATABASE_PASSWORD
        valueFrom:
           secretKeyRef:
               name: {{ .Release.Name }}-secret
               key: databaseUserPassword
